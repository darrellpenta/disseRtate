% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fs_to_dots-function.R
\name{fs_to_dots}
\alias{fs_to_dots}
\title{Create quoted input for NSE \code{.dots}}
\usage{
fs_to_dots(formlist)
}
\arguments{
\item{formlist}{Either a list of comma-separated RHS formulas, as \code{list(~f1, ~f2)}, or a character vector of such a list: \code{"list(~col1,col2)"}.}
}
\value{
A quoted expression that can be interpred as a \code{dots} argument.
}
\description{
\code{fs_to_dots} takes a list of formulas or a character vector of such a list and "quotes" it for passing to the \code{.dots} argument of the NSE versions of dplyr \code{\link[dplyr]{nse}} functions like \code{\link[dplyr]{select_}}. Can be useful if the conditions for tidying and wrangling a dataset are specified in a list, for example.
}
\examples{

# With a comma-separated list of RHS formulas

filter_list <-
  flist_to_dots(list(~Sepal.Length < 5.0, ~Petal.Length > 1.3))

head(
iris \%>\%
    dplyr::filter_(.dots = filter_list)
    )

# With a character vector version of a 'list'

df <-
  dplyr::tibble(
    col1 = 1:2,
    col2 = c("A","Z")
    dot_forms = c("list(~Sepal.Length,~Petal.Length)",
    "list(~Sepal.Length)"))

select_form <-
  flist_to_dots(df$filter_form[2])
head(
  iris \%>\%
    dplyr::select_(.dots = select_form)
    )

}

